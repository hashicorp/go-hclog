name: go-hclog

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: 
          - 'oldstable'
          - 'stable'
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Cache GolangCI-Lint
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: ~/.cache/golangci-lint
          key: golangci-lint-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: golangci-lint-${{ runner.os }}-
      - name: Cache Go Modules
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830
        with:
          path: |
              ~/go/pkg/mod
              ~/.cache/go-build
          key: go-mod-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: go-mod-${{ runner.os }}-
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@08e2f20817b15149a52b5b3ebe7de50aff2ba8c5
        with:
          version: latest  
          args: --timeout=5m --verbose
          only-new-issues: true
      - name: Run Tests with coverage
        run: go test -v -coverprofile="coverage.out" ./...
      - name: Upload coverage report
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4
        with:
          path: coverage.out
          name: Coverage-report-${{ matrix.os }}-${{ matrix.go-version }}
      - name: Display coverage report            # displaying only for linux & macOS
        if: ${{runner.os != 'Windows'}}               
        run: go tool cover -func=coverage.out
      - name: Build Go
        run: |
          cd hclogvet
          go build ./...
          cd example 
          go build ./...
